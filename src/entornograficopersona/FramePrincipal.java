/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package entornograficopersona;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;

/**
 *
 * @author carmeloportesgarcia
 */
public class FramePrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        initComponents();
        cargarFicheroComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPanePestañas = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        comboBoxPersonas = new javax.swing.JComboBox<>();
        etiquetaPersonas = new javax.swing.JLabel();
        etiquetaNombre = new javax.swing.JLabel();
        etiquetaEdad = new javax.swing.JLabel();
        etiquetaMostrar = new javax.swing.JLabel();
        etiquetaAñadir = new javax.swing.JLabel();
        etiquetaNombreAñadir = new javax.swing.JLabel();
        etiquetaEdadAñadir = new javax.swing.JLabel();
        botonAñadir = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTextFieldAñadirNombre = new javax.swing.JTextField();
        jTextFieldAñadirEdad = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldEdad = new javax.swing.JTextField();
        botonModificar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabelInfo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonCopiaSeguridad = new javax.swing.JButton();
        jButtonRestaurarCopia = new javax.swing.JButton();
        jButtonEliminarTodo = new javax.swing.JButton();
        jLabelInformacion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setName("ArchivoPersonas"); // NOI18N

        comboBoxPersonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxPersonasActionPerformed(evt);
            }
        });

        etiquetaPersonas.setText("Personas: ");

        etiquetaNombre.setText("Nombre:");

        etiquetaEdad.setText("Edad:");

        etiquetaMostrar.setText("Mostrar:");

        etiquetaAñadir.setText("Añadir:");

        etiquetaNombreAñadir.setText("Nombre:");

        etiquetaEdadAñadir.setText("Edad:");

        botonAñadir.setText("Añadir");
        botonAñadir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirActionPerformed(evt);
            }
        });

        jTextFieldAñadirNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldAñadirNombreFocusGained(evt);
            }
        });

        jTextFieldAñadirEdad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldAñadirEdadFocusGained(evt);
            }
        });

        jTextFieldNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNombreFocusGained(evt);
            }
        });

        jTextFieldEdad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEdadFocusGained(evt);
            }
        });
        jTextFieldEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEdadActionPerformed(evt);
            }
        });

        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        jLabelInfo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaAñadir)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldAñadirNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(etiquetaEdadAñadir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldAñadirEdad))
                                .addGap(18, 18, 18)
                                .addComponent(botonAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(etiquetaMostrar)
                                            .addComponent(etiquetaNombreAñadir))
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(etiquetaPersonas)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(comboBoxPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etiquetaNombre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(etiquetaEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 26, Short.MAX_VALUE))
                                    .addComponent(jTextFieldEdad))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(botonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(etiquetaMostrar)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(etiquetaNombre)
                                    .addComponent(etiquetaEdad))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaPersonas)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(botonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonEliminar)))
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiquetaAñadir)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaNombreAñadir)
                    .addComponent(etiquetaEdadAñadir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAñadirNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldAñadirEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAñadir))
                .addGap(27, 27, 27)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPanePestañas.addTab("Personas", jPanel1);

        jButtonCopiaSeguridad.setText("Copia de Seguridad");
        jButtonCopiaSeguridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopiaSeguridadActionPerformed(evt);
            }
        });

        jButtonRestaurarCopia.setText("Restaurar desde copia");
        jButtonRestaurarCopia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRestaurarCopiaActionPerformed(evt);
            }
        });

        jButtonEliminarTodo.setText("Eliminar todo");
        jButtonEliminarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarTodoActionPerformed(evt);
            }
        });

        jLabelInformacion.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelInformacion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jButtonCopiaSeguridad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(jButtonRestaurarCopia)
                .addGap(101, 101, 101))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jButtonEliminarTodo))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabelInformacion, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCopiaSeguridad)
                    .addComponent(jButtonRestaurarCopia))
                .addGap(18, 18, 18)
                .addComponent(jButtonEliminarTodo)
                .addGap(58, 58, 58)
                .addComponent(jLabelInformacion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jTabbedPanePestañas.addTab("Ficheros", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPanePestañas, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPanePestañas, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxPersonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxPersonasActionPerformed
        try {
            jTextFieldNombre.setText(comboBoxPersonas.getItemAt(comboBoxPersonas.getSelectedIndex()).getNombre());
            jTextFieldEdad.setText(String.valueOf(comboBoxPersonas.getItemAt(comboBoxPersonas.getSelectedIndex()).getEdad()));
        } catch (java.lang.IndexOutOfBoundsException jlIOBE) {

        } catch (java.lang.NullPointerException jlNPE) {

        }
    }//GEN-LAST:event_comboBoxPersonasActionPerformed

    private void botonAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirActionPerformed
        String n;
        int e;
        try {
            if (jTextFieldAñadirNombre.getText().equals("") || jTextFieldAñadirEdad.getText().equals("")) {
                botonAñadir.setEnabled(false);
                jLabelInfo.setText("");
                jLabelInfo.setText("Algún campo vacio");
            } else {
                n = jTextFieldAñadirNombre.getText();
                e = (Integer.parseInt(jTextFieldAñadirEdad.getText()));
                Persona p = new Persona(n, e);
                comboBoxPersonas.addItem(p);
                añadirDato("Personas.txt", p.getNombre());
                añadirDato("Personas.txt", (String.valueOf(p.getEdad())));
                jLabelInfo.setText("");
                jLabelInfo.setText("Registro añadido con éxito");
            }
        } catch (java.lang.NumberFormatException jlnfe) {
            botonAñadir.setEnabled(false);
            jLabelInfo.setText("");
            jLabelInfo.setText("Campo edad debe ser numérico");
        }
        jTextFieldAñadirNombre.setText("");
        jTextFieldAñadirEdad.setText("");
    }//GEN-LAST:event_botonAñadirActionPerformed

    private void jTextFieldAñadirNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAñadirNombreFocusGained
        botonAñadir.setEnabled(true);
    }//GEN-LAST:event_jTextFieldAñadirNombreFocusGained

    private void jTextFieldAñadirEdadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAñadirEdadFocusGained
        botonAñadir.setEnabled(true);
    }//GEN-LAST:event_jTextFieldAñadirEdadFocusGained

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        try {
            if ((jTextFieldNombre.getText().equals("") || jTextFieldEdad.getText().equals("")) || !isNumeric(jTextFieldEdad.getText())) {
                botonModificar.setEnabled(false);
                jLabelInfo.setText("");
                jLabelInfo.setText("Algún campo vacio o campo edad no es numérico");
            } else {
                insertarElemento("Personas.txt", comboBoxPersonas.getItemAt(comboBoxPersonas.getSelectedIndex()).getNombre(), jTextFieldNombre.getText(), jTextFieldEdad.getText());
                cargarFicheroComboBox();
                jLabelInfo.setText("");
                jLabelInfo.setText("Registro modificado con éxito");
            }
        } catch (java.lang.NumberFormatException jlnfe) {
            botonModificar.setEnabled(false);
            jLabelInfo.setText("");
            jLabelInfo.setText("Campo edad debe ser numérico");
        }
    }//GEN-LAST:event_botonModificarActionPerformed

    private void jTextFieldEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEdadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEdadActionPerformed

    private void jTextFieldEdadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEdadFocusGained
        botonModificar.setEnabled(true);
    }//GEN-LAST:event_jTextFieldEdadFocusGained

    private void jTextFieldNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNombreFocusGained
        botonModificar.setEnabled(true);
    }//GEN-LAST:event_jTextFieldNombreFocusGained

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        try {
            eliminarElemento("Personas.txt", comboBoxPersonas.getItemAt(comboBoxPersonas.getSelectedIndex()).getNombre());
            eliminarElemento("Personas.txt", String.valueOf(comboBoxPersonas.getItemAt(comboBoxPersonas.getSelectedIndex()).getEdad()));
            jTextFieldNombre.setText("");
            jTextFieldEdad.setText("");
            cargarFicheroComboBox();
            jLabelInfo.setText("");
            jLabelInfo.setText("Registro eliminado");
        } catch (java.lang.ArrayIndexOutOfBoundsException jlAIOBE) {
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void jButtonCopiaSeguridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCopiaSeguridadActionPerformed
        copiarFichero("Personas.txt", "CopiaDeSeguridadPersonas.txt");
        jLabelInformacion.removeAll();
        jLabelInformacion.setText("Copia creada con éxito.");
    }//GEN-LAST:event_jButtonCopiaSeguridadActionPerformed

    private void jButtonRestaurarCopiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRestaurarCopiaActionPerformed
        copiarFichero("CopiaDeSeguridadPersonas.txt", "Personas.txt");
        jLabelInformacion.removeAll();
        cargarFicheroComboBox();
        jLabelInformacion.setText("Copia restaurada con éxito.");
    }//GEN-LAST:event_jButtonRestaurarCopiaActionPerformed

    private void jButtonEliminarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarTodoActionPerformed
        File fichero = new File("Personas.txt");
        fichero.delete();
        comboBoxPersonas.removeAllItems();
        jTextFieldNombre.setText("");
        jTextFieldEdad.setText("");
        jLabelInformacion.removeAll();
        jLabelInformacion.setText("Personas.txt eliminado.");
    }//GEN-LAST:event_jButtonEliminarTodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });
    }

    public void cargarFicheroComboBox() {
        try {
            //Abrir el archivo en modo lectura
            FileReader fr = new FileReader("Personas.txt");
            //Crear bufer de lectura
            BufferedReader br = new BufferedReader(fr);
            String linea;
            //Vacia el ArrayList para evitar duplicados
            comboBoxPersonas.removeAllItems();
            //Mostrar todas las lineas hasta el final del fichero
            while ((linea = br.readLine()) != null) {
                Persona p = new Persona(linea, (Integer.parseInt(br.readLine())));
                comboBoxPersonas.addItem(p);
            }
            //Cerrar el archivo
            br.close();
        } catch (java.io.FileNotFoundException fnfex) {
        } catch (java.io.IOException ioex) {
        }
    }

    public static void añadirDato(String arch, String s) {
        try {
            //Abrir archivo en modo escritura
            FileWriter fw = new FileWriter(arch, true);
            //Crear buffer de escritura
            BufferedWriter bw = new BufferedWriter(fw);
            //Para que funcione el println
            PrintWriter salida = new PrintWriter(bw);
            //Escribe con salto de linea
            salida.println(s);
            //Cerrar archivo
            salida.close();
        } catch (java.io.IOException ioex) {

        }
    }

    public void guardarComboBoxAFichero() {
        try {
            //Abrir archivo en modo escritura
            FileWriter fw = new FileWriter("Personas.txt");
            //Crear buffer de escritura
            BufferedWriter bw = new BufferedWriter(fw);
            //Para que funcione el println
            PrintWriter salida = new PrintWriter(bw);
            //Escribe con salto de linea
            for (int i = 0; i < comboBoxPersonas.getComponentCount(); i++) {
                salida.println(comboBoxPersonas.getItemAt(i).getNombre());
                salida.println(comboBoxPersonas.getItemAt(i).getEdad());
            }
            //Cerrar archivo
            salida.close();
        } catch (java.io.IOException ioex) {
        }
    }

    private static boolean isNumeric(String cadena) {
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }

    public static void insertarElemento(String arch, String modificar, String modificada, String n) {
        try {
            //Abre el archivo en modo lectura
            FileReader fr = new FileReader(arch);
            //Abrir archivo en modo escritura
            FileWriter fw = new FileWriter("copiaInsertarElemento.txt");
            //Crear bufer de lectura
            BufferedReader br = new BufferedReader(fr);
            //Crea buffer de escritura
            BufferedWriter bw = new BufferedWriter(fw);
            //Para que funcione el println
            PrintWriter salida = new PrintWriter(bw);
            //Variable para ir guardando las lineas leidas en el bucle
            String linea;
            //Mostramos todas las lineas hasta el final del fichero
            while ((linea = br.readLine()) != null) {
                if (linea.equals(modificar)) {
                    salida.println(modificada);
                    salida.println(n);
                    br.readLine();
                } else {
                    salida.println(linea);
                }
            }
            //Cerrar el archivos
            br.close();
            bw.close();
            copiarFichero("copiaInsertarElemento.txt", arch);
        } catch (java.io.FileNotFoundException fnfex) {
        } catch (java.io.IOException ioex) {
        }
    }

    public static void eliminarElemento(String arch, String s) {
        try {
            //Abre el archivo en modo lectura
            FileReader fr = new FileReader(arch);
            //Abrir archivo en modo escritura
            FileWriter fw = new FileWriter("copiaEliminarElemento.txt");
            //Crear bufer de lectura
            BufferedReader br = new BufferedReader(fr);
            //Crea buffer de escritura
            BufferedWriter bw = new BufferedWriter(fw);
            //Para que funcione el println
            PrintWriter salida = new PrintWriter(bw);
            //Variable para ir guardando las lineas leidas en el bucle
            String linea;
            //Mostramos todas las lineas hasta el final del fichero
            while ((linea = br.readLine()) != null) {
                if (!linea.equals(s)) {
                    salida.println(linea);
                }
            }
            //Cerrar el archivos
            br.close();
            bw.close();
            copiarFichero("copiaEliminarElemento.txt", arch);
        } catch (java.io.FileNotFoundException fnfex) {
        } catch (java.io.IOException ioex) {
        }
    }

    public static void copiarFichero(String origen, String destino) {
        try {
            //Abre el archivo en modo lectura
            FileReader fr = new FileReader(origen);
            //Abrir archivo en modo escritura
            FileWriter fw = new FileWriter(destino);
            //Crear bufer de lectura
            BufferedReader br = new BufferedReader(fr);
            //Crea buffer de escritura
            BufferedWriter bw = new BufferedWriter(fw);
            //Para que funcione el println
            PrintWriter salida = new PrintWriter(bw);
            //Variable para ir guardando las lineas leidas en el bucle
            String linea;
            //Mostramos todas las lineas hasta el final del fichero
            while ((linea = br.readLine()) != null) {
                salida.println(linea);
            }
            //Cerrar el archivos
            br.close();
            bw.close();
        } catch (java.io.FileNotFoundException fnfex) {
        } catch (java.io.IOException ioex) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAñadir;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JComboBox<Persona> comboBoxPersonas;
    private javax.swing.JLabel etiquetaAñadir;
    private javax.swing.JLabel etiquetaEdad;
    private javax.swing.JLabel etiquetaEdadAñadir;
    private javax.swing.JLabel etiquetaMostrar;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JLabel etiquetaNombreAñadir;
    private javax.swing.JLabel etiquetaPersonas;
    private javax.swing.JButton jButtonCopiaSeguridad;
    private javax.swing.JButton jButtonEliminarTodo;
    private javax.swing.JButton jButtonRestaurarCopia;
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JLabel jLabelInformacion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPanePestañas;
    private javax.swing.JTextField jTextFieldAñadirEdad;
    private javax.swing.JTextField jTextFieldAñadirNombre;
    private javax.swing.JTextField jTextFieldEdad;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables

}
